from django.shortcuts import render, redirect
from django.urls import reverse
from django.template import loader
from django.http import HttpResponse
from django.db import transaction
from .models import Machine, Product, Variant

def machines(request):
    reset_link = reverse("reset")
    machines = Machine.objects.all()
    machines_data = {}
    for machine in machines:
        machines_data[machine.id] = {
            'name' : machine.name,
            'status' : machine.status,
            'actions' : get_machine_actions(machine),
        }
    template = loader.get_template('main.html')
    context = {
        'data' : {
            'reset_link' : reset_link,
            'machines' : machines_data,
        }
    }
    return HttpResponse(template.render(context, request))

def get_machine_actions(machine):
    variants = Variant.objects.filter(machine = machine.id, quantity__gt = 0)
    data = {}
    if machine.status == Machine.STATUS_IDLE and len(variants) > 0:
        data[machine.id] = {
            0 : {
                'link_name' : 'buy',
                'link' : reverse('buy', args = (machine.id,))
        }
    elif machine.status == Machine.STATUS_WAITING:
        data[machine.id] = {}
        for i in range(len(variants)):
            variant = variants[i]
            data[machine.id][id] = {
'link_name' : str(variant.product.name),
		'link' : reverse('select', args = (variant.id))
	    }
    return data

def reset(request):
    Machine.objects.all().delete()
    Product.objects.all().delete()
    Variant.objects.all().delete()
    
    machine1 = Machine(id = 1, name = "machine1", status = "idle")
    machine1.save()
    machine2 = Machine(id = 2, name = "machine2", status = "idle")
    machine2.save()
    
    product1 = Product(id = 1, name = "coffee")
    product1.save()
    product2 = Product(id = 2, name = "juice")
    product2.save()
    
    variant1 = Variant(id = 1, product = product1, machine = machine1, quantity = 7)
    variant2 = Variant(id = 2, product = product2, machine = machine1, quantity = 5)
    variant3 = Variant(id = 3, product = product1, machine = machine2, quantity = 8)
    variant4 = Variant(id = 4, product = product2, machine = machine2, quantity = 9)
    variants = [variant1, variant2, variant3, variant4]
    for variant in variants:
        variant.save()
    
    return redirect('/')

@transaction.atomic
def select(request, id):
    varinat = Variant.objects.get(id = id)
    variant.quantity -= 1
    variant.save()

    machine = variant.machine
    assert machine.status == Machine.STATUS_WAITING
    machine.status = Machine.STATUS_IDLE
    machine.save()

    return redirect('/')

def buy(request, id):
    machine = Machine.objects.get(id = id)
    machine.status = Machine.STATUS_WAITING
    machine.save()

    return redirect('/')

